---
sudo: required
services:
  - docker
language: python
python:
  - "2.7"
env:
  global:
    - OS_NAME=centos
  matrix:
    - OS_MAJOR_VERSION=7
before_install:
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt update
  - sudo apt install -y docker-ce
  - docker --version
script:
  # Then, start the build container
  - docker run --name build_container -d -ti -v $PWD:/src -w /src $OS_NAME:$OS_MAJOR_VERSION sh -c 'while true ; do sleep 1000 ; done'
  # Now, install prerequisites for the build
  - docker exec -i -w /root build_container yum install -y rpm-build rpmlint make rsync
  # Eventually build the rpm
  - docker exec -i -w /src build_container make rpm
  # lint the RPM
  - docker exec -i -w /src/build build_container rpmlint --file ../.rpmlint.ini RPMS/
  # Now, start the test container
  - docker run --name install_container -d -ti -v $PWD:/src -w /src $OS_NAME:$OS_MAJOR_VERSION sh -c 'while true ; do sleep 1000 ; done'
  # and install it
  - docker exec -i -w /src/build/RPMS/noarch install_container yum install -y epel-release
  - docker exec -i -w /src/build/RPMS/noarch install_container sh -c "yum localinstall -y bdii*.el${OS_MAJOR_VERSION}.noarch.rpm"
deploy:
  provider: releases
  # Set in the settings page of the repository, as an environment variable
  api_key: $GITHUB_TOKEN
  file_glob: true
  file:
    - build/RPMS/noarch/bdii*.el${OS_MAJOR_VERSION}.noarch.rpm
    - build/SRPMS/bdii*.el${OS_MAJOR_VERSION}.src.rpm
  on:
    tags: true
